version: "3"

services:
  db:
    image: postgres:11.1
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - SME-Indice_IDEP-API/.env
    networks:
      - database
    ports:
      - "5432:5432"

  djangoapp:
    build: SME-Indice_IDEP-API/
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE
    volumes:
      - ./SME-Indice_IDEP-API/:/opt/services/djangoapp/src
      - static:/opt/services/djangoapp/static
      - media:/opt/services/djangoapp/media
    env_file:
      - SME-Indice_IDEP-API/.env
    networks:
      - database
      - nginx_network
    depends_on:
      - db

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./SME-Indice_IDEP-API/config/nginx/conf.d:/etc/nginx/conf.d
      - static:/opt/services/djangoapp/static
      - media:/opt/services/djangoapp/media
      - front:/usr/share/nginx/html
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    networks:
      - nginx_network
    depends_on:
      - djangoapp
      - db
      - front
    ports:
      - "80:80"
      # - "443:443"
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  front:
    build: SME-Indice_IDEP-Front/
    networks:
      - nginx_network
    volumes:
      - front:/opt/services/front/src/build

networks:
  database:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  db_data:
  static:
  media:
  front: